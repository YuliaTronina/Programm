package Laba_9.Task_1;

//        Генерация исключительной ситуации в методе. Использование оператора return в секциях try и finally.
//        Выполнить примеры 1-14 лабораторной работы, дав
//        письменно объяснения (в комментариях к коду) последовательности
//        выполняемых команд.

public class Except4 {
    // Формируется блок кода с проверкой ошибок, который выполняется последовательно до возникновения исключения.
    // В данном блоке генерируется ошибка типа NullPointerException, после достижения которой. она перехватывается блоком
    // catch, тк тип ошибки соответствует типу перехватываемой ошибки. После этого выполнение переходит к блоку finally,
    // тк указанный блок выполняется независимо от наличия ошибок и их перехвата.

    public static void main(String[] args) {
        try{
            System.out.println("0");
            throw new NullPointerException ("ошибка");
        }
        catch (NullPointerException e){ //выведется на экран, тк соответствует ошибке, в блоке try{}.
            System.out.println("1");
        }
        finally {                       //выводится в любом случае (при отсутствии ошибок компиляции)
            System.out.println("2");
        }
        System.out.println("3"); //выводится
    }
}
